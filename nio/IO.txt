1.BIO、NIO、AIO使用场景
BIO：用于连接数目较小且固定的架构，这种方式对服务器资源要求比较高，并发仅限于应用中     （同步并阻塞）
NIO：用于连接数目较多且连接比较短的架构，如聊天服务器，弹幕，服务器间通讯	           （同步非阻塞）
AIO：用于连接数目较多且连接比较长的架构，如相册服务器，                                                  （异步非阻塞）

2.NIO三大组件
Channel(通道/数据通道) 
selector(选择器)
buffer(缓冲区)    实现非阻塞的关键



4.BIO和NIO比较
1>.BIO以流的方式处理数据，而NIO以块的方式处理数据块io的效率比流io的效率高很多
2>.BIO是阻塞的，NIO是非阻塞的(buffer起到了很大的作用)
3>.BIO基于字节流、字符流进行操作
     NIO基于Channel(管道)、Buffer(缓冲区)进行操作
     数据总是从通道读取到缓冲区中，或者从缓冲区读取到通道中
     Selector(选择器)用于监听多个通道的事件，因此当线程可以监听多个客户端通道

5.Selector、Channel、Buffer的关系
1>.每个channel对应一个buffer
2>.Selector对应一个线程，一个线程对应多个channel(连接)
3>.channel注册到了该selector//程序
4>.程序切换到那个channel是由事件决定的，Event
5>.selector会根据不同的事件，在各个通道切换
6>.Buffer就是内存块，底层是数组
7>.数据的读取写入是通过Buffer，这个BIO不同，
     BIO中要么是输入流，要是输出流，不能双向
     但是Buffer可读可写，需要filp方法切换
8>.Channel是双向的，可以返回底层操作系统的情况
     比如Linux,底层的操作系统通道是双向
